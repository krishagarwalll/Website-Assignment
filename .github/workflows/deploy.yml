name: deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: siteground-deploy
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # --- SSH prep (no here-strings, no awk; super compatible) ---
      - name: Prepare SSH
        run: |
          set -e
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          # Write the PRIVATE key exactly as stored in the secret and normalize CRLF->LF
          ( echo "${{ secrets.SG_SSH_KEY }}" | sed 's/\r$//' ) > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Fail early if the key is malformed
          ssh-keygen -y -f ~/.ssh/id_rsa >/dev/null

          # Trust the server host key so host-key verification doesn't fail
          touch ~/.ssh/known_hosts
          ssh-keyscan -p "${{ secrets.SG_PORT }}" "${{ secrets.SG_HOST }}" >> ~/.ssh/known_hosts 2>/dev/null || true

          # Quick connectivity probe (helps surface wrong user/host/port immediately)
          ssh -o StrictHostKeyChecking=yes -i ~/.ssh/id_rsa -p "${{ secrets.SG_PORT }}" \
            "${{ secrets.SG_USER }}@${{ secrets.SG_HOST }}" "echo SSH_OK"

      - name: Deploy via rsync
        run: |
          set -e
          rsync -avz --delete \
            --exclude ".git/" \
            --exclude ".github/" \
            --exclude "node_modules/" \
            -e "ssh -i ~/.ssh/id_rsa -p ${{ secrets.SG_PORT }} -o StrictHostKeyChecking=yes" \
            ./ "${{ secrets.SG_USER }}@${{ secrets.SG_HOST }}:${{ secrets.SG_PATH }}/"

          # Show what landed (handy for debugging)
          ssh -o StrictHostKeyChecking=yes -i ~/.ssh/id_rsa -p "${{ secrets.SG_PORT }}" \
            "${{ secrets.SG_USER }}@${{ secrets.SG_HOST }}" "ls -la '${{ secrets.SG_PATH }}' | tail -n +1"
